<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Kwebi&#39;s blog</title>
        <link>http://localhost:1313/</link>
        <description>Kwebi的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 19 May 2024 16:48:08 &#43;0800</lastBuildDate>
            <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>abc341_E</title>
    <link>http://localhost:1313/abc341_e/</link>
    <pubDate>Sun, 19 May 2024 16:48:08 &#43;0800</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/abc341_e/</guid>
    <description><![CDATA[题目链接如下：E - Alternating String 题目大意如下：一个由 0 和 1 组成的长度为 𝑁 的字符串，如果字符串中任意两个连续的字符都不相同，则称为良好字符串。进行以下操]]></description>
</item>
<item>
    <title>迁移博客到hugo&#43;LoveIt</title>
    <link>http://localhost:1313/%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E5%88%B0hugo/</link>
    <pubDate>Sun, 19 May 2024 11:19:42 &#43;0800</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E5%88%B0hugo/</guid>
    <description><![CDATA[前言 之前一直使用 hexo+next 主题，但是遇到个问题就是每次换环境或者换电脑，需要重新安装 node，node_moudles，从新装主题，由于 npm 更新或者包]]></description>
</item>
<item>
    <title>windows安装wsl和青龙面板</title>
    <link>http://localhost:1313/wsl%E8%A3%85%E9%9D%92%E9%BE%99/</link>
    <pubDate>Mon, 27 Nov 2023 18:30:57 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/wsl%E8%A3%85%E9%9D%92%E9%BE%99/</guid>
    <description><![CDATA[安装WSL 在cmd中输入以下命令： 1 wsl --install 有疑问可看下面文章 如何使用 WSL 在 Windows 上安装 需要注意的点是系统版本不能太低。 如果中途显示访问失败可以考虑更]]></description>
</item>
<item>
    <title>Doom Emacs初步使用</title>
    <link>http://localhost:1313/doom-emacs%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Wed, 27 Apr 2022 18:30:57 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/doom-emacs%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[<p>几年前稍微玩过<code>Emacs</code>,但没有深入，虽然现在也不算精通，不过起码还能融入日常使用，也算入门吧。</p>]]></description>
</item>
<item>
    <title>在服务器上部署项目</title>
    <link>http://localhost:1313/%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</link>
    <pubDate>Sat, 11 Jul 2020 15:17:19 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</guid>
    <description><![CDATA[<p>我购买的是阿里云的学生机，操作系统是CentOS
部署的项目是Nodejs和React的前后端分离项目，需要安装配置nodejs，mysql，nginx等
</p>]]></description>
</item>
<item>
    <title>JavaScript中闭包和this的一些理解</title>
    <link>http://localhost:1313/javascript%E4%B8%AD%E9%97%AD%E5%8C%85%E5%92%8Cthis%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</link>
    <pubDate>Tue, 28 Apr 2020 13:02:27 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/javascript%E4%B8%AD%E9%97%AD%E5%8C%85%E5%92%8Cthis%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</guid>
    <description><![CDATA[<h3 id="循环与闭包">循环与闭包</h3>
<p>在一次面试中，面试官出了这样一道题，让我说出运行结果</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">setTimeout</span><span class="p">(()=&gt;{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span><span class="nx">i</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>gym101177I-最长上升子序列</title>
    <link>http://localhost:1313/gym101177i-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</link>
    <pubDate>Fri, 04 Oct 2019 21:31:35 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/gym101177i-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
    <description><![CDATA[<p>题目大意是给你一系列区间，区间两两互不相交，但可能会有重复出现，区间的值等于区间的长度，求最大的上升的区间值和。你可以类比最长上升子序列，不过最长上升子序列求的是序列的长度，而这里转化为序列的值。
</p>]]></description>
</item>
<item>
    <title>快速幂与模运算</title>
    <link>http://localhost:1313/%E5%BF%AB%E9%80%9F%E5%B9%82%E4%B8%8E%E6%A8%A1%E8%BF%90%E7%AE%97/</link>
    <pubDate>Wed, 15 May 2019 17:21:41 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/%E5%BF%AB%E9%80%9F%E5%B9%82%E4%B8%8E%E6%A8%A1%E8%BF%90%E7%AE%97/</guid>
    <description><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1226" target="_blank" rel="noopener noreffer ">例题</a>:</p>
<blockquote>
<p>输入 <code>b</code>，<code>p</code>，<code>k</code> 的值，求 <code>b</code>^<code>p</code> mod <code>k</code> 的值。其中 <code>b</code>，<code>p</code>，<code>k</code> 为长整型数。</p>
</blockquote>]]></description>
</item>
<item>
    <title>最小生成树算法</title>
    <link>http://localhost:1313/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E7%AE%97%E6%B3%95/</link>
    <pubDate>Sat, 04 May 2019 13:49:31 &#43;0000</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[<h3 id="1-prim算法">(1) Prim算法</h3>
<p>取图中任意一个顶点 v 作为生成树的根，之后往生成树上添加新的顶点 w。在添加的顶点 w 和已经在生成树上的顶点v 之间必定存在一条边，并且该边的权值在所有连通顶点 v 和 w 之间的边中取值最小。之后继续往生成树上添加顶点，直至生成树上含有 n 个顶点为止。</p>]]></description>
</item>
<item>
    <title>右值引用与移动语义</title>
    <link>http://localhost:1313/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/</link>
    <pubDate>Sun, 24 Feb 2019 15:06:34 &#43;0800</pubDate>
    <author>kwebi</author>
    <guid>http://localhost:1313/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/</guid>
    <description><![CDATA[<p>什么是右值？在C++中，一种被广泛认可的说法是，不能取地址，没有名字的就是右值，通常位于等号右边，相反，位于等号左边的，能取地址，有名字的被称为左值。</p>]]></description>
</item>
</channel>
</rss>
